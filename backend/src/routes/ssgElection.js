const express = require("express")
const router = express.Router()
const SSGElectionController = require("../controllers/ssgElectionController")
const { authMiddleware, authorizeRoles, voterAuthMiddleware } = require("../middleware/authMiddleware")

router.use('/user', authMiddleware) 
router.get("/user/", authorizeRoles("election_committee", "sao"), SSGElectionController.getAllSSGElections)
router.get("/user/dashboard", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGDashboardSummary)
router.get("/user/upcoming", authorizeRoles("election_committee", "sao"), SSGElectionController.getUpcomingSSGElections)
router.get("/user/:id", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElection)
router.get("/user/:id/overview", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElectionOverview)
router.get("/user/:id/statistics", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElectionStatistics)
router.get("/user/:id/results", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElectionResults)
router.get("/user/:id/candidates", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElectionCandidates)
router.get("/user/:id/positions", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElectionPositions)
router.get("/user/:id/partylists", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElectionPartylists)
router.get("/user/:id/participants", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElectionVoterParticipants)
router.get("/user/:id/turnout", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElectionVoterTurnout)
router.get("/user/:id/ballots", authorizeRoles("election_committee", "sao"), SSGElectionController.getSSGElectionBallots)

router.post("/user/", authorizeRoles("election_committee"), SSGElectionController.createSSGElection)
router.put("/user/:id", authorizeRoles("election_committee"), SSGElectionController.updateSSGElection)
router.patch("/user/:id/status", authorizeRoles("election_committee"), SSGElectionController.toggleSSGElectionStatus)
router.delete("/user/:id", authorizeRoles("election_committee"), SSGElectionController.deleteSSGElection)

router.use('/voter', voterAuthMiddleware) 
router.get("/voter/", SSGElectionController.getAllSSGElectionsForVoters) 
router.get("/voter/for-voting", SSGElectionController.getSSGElectionsForVoting)
router.get("/voter/:id", SSGElectionController.getSSGElectionForVoters) 
router.get("/voter/:id/statistics", SSGElectionController.getSSGElectionStatisticsForVoters) 
router.get("/voter/:id/results", SSGElectionController.getSSGElectionResultsForVoters) 
router.get("/voter/:id/candidates", SSGElectionController.getCandidatesForVoter)
router.get("/voter/:id/positions", SSGElectionController.getSSGElectionPositions) 
router.get("/voter/:id/partylists", SSGElectionController.getSSGElectionPartylists) 

router.get("/", authMiddleware, authorizeRoles("election_committee", "sao"), (req, res) => {res.redirect('/ssgElections/user/')})

module.exports = router